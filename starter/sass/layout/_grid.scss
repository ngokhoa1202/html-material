.row {
  max-width: $grid-width;
  margin: 0 auto;

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }
  
  // alway include clearfix in the container to prevents its height from becoming 0
  @include clearfix;
  
  // attribute selector using prefix matching
  [class^="col"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  .col-1-of-2 {
    // #{$variable} in calc function 
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }
  
  // col-1-of-3 + gutter + col-2-of-3 = width
  .col-2-of-3 {
    width: calc(100% - #{$gutter-horizontal} - ((100% - 2 * #{$gutter-horizontal}) / 3));
  }
  
  // col-1-of-4 + gutter + col-1-of-4 + gutter + col-2-of-4 = width
  .col-2-of-4 {
    width: calc(100% - 2 * (100% - 3 * #{$gutter-horizontal}) / 4 - 2 * #{$gutter-horizontal});
  }
  
  // col-1-of-4 + gutter + col-3-of-4 = width
  .col-3-of-4 {
    width: calc(100% - (100% - 3 * #{$gutter-horizontal}) / 4 - #{$gutter-horizontal});
  }
}